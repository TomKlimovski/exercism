format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$1.class
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$2.class
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$3.class
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest.class
binary dependencies:
2 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> /Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> Series$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> SeriesTest
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> SeriesTest$$anonfun$1
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> SeriesTest$$anonfun$2
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> SeriesTest$$anonfun$3
used names:
18 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> <init>
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> Equality
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> FlatSpec
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> Matchers
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> None
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> Series
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> SeriesTest
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> convertToAnyShouldWrapper
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> default
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> equal
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> in
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> it
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> largestProduct
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> org
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> scala
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> scalactic
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> scalatest
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> should
product stamps:
4 items
/Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$1.class -> lastModified(1482116156000)
/Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$2.class -> lastModified(1482116156000)
/Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest$$anonfun$3.class -> lastModified(1482116156000)
/Users/tomklimovski/exercism/scala/largest-series-product/target/scala-2.11/test-classes/SeriesTest.class -> lastModified(1482116156000)
source stamps:
1 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> hash(acd6326bed20b7c4f495a582a07641c56b27f3eb)
binary stamps:
2 items
/Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
2 items
/Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Int
/Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> 

external apis:
1 items
Series$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCLyCCRAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cMSg2Q90AAZub3RpZnlzcQB+AAzFhEqTdAAEd2FpdHNxAH4ADMFqjZt0AA0kYXNJbnN0YW5jZU9mc3EAfgAMFCSun3QABlNlcmllc3NxAH4ADOZCaq50AAZlcXVhbHNzcQB+AAxdXu+JdAAMYXNJbnN0YW5jZU9mc3EAfgAM+UJJLHQADHN5bmNocm9uaXplZHNxAH4ADMpwr3p0AA0kaXNJbnN0YW5jZU9mc3EAfgAMvuPUF3QACW5vdGlmeUFsbHNxAH4ADLMhwYp0AAxpc0luc3RhbmNlT2ZzcQB+AAzlSDFWdAACPT1zcQB+AAwlLKaedAAFY2xvbmVzcQB+AAxbm5Z3dAAIdG9TdHJpbmdzcQB+AAwA0EmadAACIT1zcQB+AAw7TR04dAAGc2xpY2Vzc3EAfgAMJR9WxHQACGdldENsYXNzc3EAfgAMu465UHQABXNMaXN0c3EAfgAMPVQNd3QAAm5lc3EAfgAMtYG9XnQAAmVxc3EAfgAMHHVJNHQAAiMjc3EAfgAMCwdB53QACGZpbmFsaXplc3EAfgAM8TkrQ3QACGhhc2hDb2Rlc3EAfgAMHa1jyXQADmxhcmdlc3RQcm9kdWN0c3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ARXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHEAfgAVdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXXhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXAFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ARUwACWluaGVyaXRlZHEAfgBFTAAHcGFyZW50c3EAfgBFeHEAfgBlc3EAfgBcAXVxAH4AQAAAAABwc3EAfgBcAXVxAH4AQAAAAABwc3EAfgBcAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAACc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AZHQABk9iamVjdHNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAEamF2YXNxAH4AfXQABGxhbmdzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AfnNxAH4AcXQAA0FueXNxAH4AdXNxAH4AeHVxAH4AewAAAAJzcQB+AH10AAVzY2FsYXEAfgCEcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWRUBsVl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABTL1VzZXJzL3RvbWtsaW1vdnNraS9leGVyY2lzbS9zY2FsYS9sYXJnZXN0LXNlcmllcy1wcm9kdWN0L3RhcmdldC9zY2FsYS0yLjExL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABSHmxKNP+6l+C/CEwtE5z+OniuYBg==
source infos:
1 items
/Users/tomklimovski/exercism/scala/largest-series-product/src/test/scala/SeriesTest.scala -> 
AAAAAAAAAAA=
compilations:
6 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWJRAqTp1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLOEOYl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLOEcFB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLOEmQV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWLOLAEN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWRUBxXF1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAWC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvbGFyZ2VzdC1zZXJpZXMtcHJvZHVjdC90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv

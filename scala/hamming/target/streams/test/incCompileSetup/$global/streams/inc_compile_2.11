format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
9 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$1.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$2.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$3.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$4.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$5.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$6.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7.class
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs.class
binary dependencies:
3 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> /Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Hamming$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
9 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$1
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$2
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$3
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$4
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$5
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$6
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$7
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1
used names:
22 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> <init>
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> FlatSpec
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Hamming
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> HammingSpecs
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> IllegalArgumentException
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> ManifestFactory
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> Matchers
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> an
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> apply
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> be
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> classType
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> compute
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> convertToAnyShouldWrapper
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> in
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> it
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> org
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> package
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> reflect
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> scala
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> scalatest
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> should
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> thrownBy
product stamps:
9 items
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$1.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$2.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$3.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$4.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$5.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$6.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7$$anonfun$apply$mcV$sp$1.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs$$anonfun$7.class -> lastModified(1473684401000)
/Users/tomklimovski/exercism/scala/hamming/target/scala-2.11/test-classes/HammingSpecs.class -> lastModified(1473684401000)
source stamps:
1 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> hash(158d9bf0e83fc20b6f12d8d973c028a3e5481add)
binary stamps:
3 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1428689516000)
/Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> lastModified(1435004218000)
/Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> lastModified(1431595232000)
class names:
3 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.IllegalArgumentException
/Users/tomklimovski/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar -> scala.Int
/Users/tomklimovski/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.5.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> 

external apis:
1 items
Hamming$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHCgZcjJAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFXNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cG0V6Kx0AAZub3RpZnlzcQB+AAzzSDJ1dAAEd2FpdHNxAH4ADPCiGSJ0AA0kYXNJbnN0YW5jZU9mc3EAfgAMn4MaJ3QABmVxdWFsc3NxAH4ADHuzApB0AAxhc0luc3RhbmNlT2ZzcQB+AAxHRuSvdAAMc3luY2hyb25pemVkc3EAfgAM0C2MFnQADSRpc0luc3RhbmNlT2ZzcQB+AAwzL+M8dAAHY29tcHV0ZXNxAH4ADFjEvCp0AAlub3RpZnlBbGxzcQB+AAxtB8qcdAAMaXNJbnN0YW5jZU9mc3EAfgAMeqQ1qHQAAj09c3EAfgAMmSnic3QABWNsb25lc3EAfgAMywnyB3QAB0hhbW1pbmdzcQB+AAzgsJN1dAAIdG9TdHJpbmdzcQB+AAxksCDFdAACIT1zcQB+AAy571OkdAAIZ2V0Q2xhc3NzcQB+AAz+PfrDdAACbmVzcQB+AAxxFzAmdAACZXFzcQB+AAyCPay0dAACIyNzcQB+AAyqaBGVdAAIZmluYWxpemVzcQB+AAy1JoQadAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBBeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAcQB+ACd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHABc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHBzcQB+AFgBc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEFMAAlpbmhlcml0ZWRxAH4AQUwAB3BhcmVudHNxAH4AQXhxAH4AX3NxAH4AWAF1cQB+ADwAAAAAcHNxAH4AWAF1cQB+ADwAAAAAcHNxAH4AWAF1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AF50AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AF5zcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AHd0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHhzcQB+AGt0AANBbnlzcQB+AG9zcQB+AHJ1cQB+AHUAAAACc3EAfgB3dAAFc2NhbGFxAH4AfnBwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVceb1z3dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQARC9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUqIGv6TY9/OLhGC5/nPpI9JwuFEA=
source infos:
1 items
/Users/tomklimovski/exercism/scala/hamming/src/test/scala/hamming_test.scala -> 
AAAAAAAAAAA=
compilations:
4 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVx5Rm311cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVx5rWhN1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVx5rq0F1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVx5vaBV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQASS9Vc2Vycy90b21rbGltb3Zza2kvZXhlcmNpc20vc2NhbGEvaGFtbWluZy90YXJnZXQvc2NhbGEtMi4xMS90ZXN0LWNsYXNzZXN0AAEv
